# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js environment
      uses: actions/setup-node@v4.0.2
      with:
        node-version: 20.x
        cache: yarn

    - name: Install dependencies
      run: yarn install

    - name: Build website
      run: yarn build

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Build for linux
      run: go build -o bin/website ./server/
    
    - name: Build for windows
      env:
        GOOS: windows
      run: go build -o bin/website.exe ./server/

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Set release id
      run: echo "RELEASE_ID=${{ steps.create_release.outputs.release_id }}" >> $GITHUB_ENV

    - name: Upload Release Linux Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/website
        asset_name: website
        asset_label: Release Linux Asset

    - name: Upload Release Windows Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/website.exe
        asset_name: website.exe
        asset_label: Release Windows Asset
